searchState.loadedDescShard("wormhole", 0, "Wormhole\nremove the pod from the network and delete any data that …\nremove the pod from the network without losing any data on …\nSimply remove the pod from the network without losing any …\nremove this pod from the network without distributing its …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNOTE To add elements in the configuration file : To create …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMessage Coming from Network Messages recived by peers, …\nMessage Content Represent the content of the intern …\nMessage Going To Network Messages sent from fuser to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nShould be extended until meeting fuser::FileType\nInodeId is represented by an u64\nTime of last access\nBlock size\nSize in blocks\nTime of creation (macOS only)\nTime of last change\nFlags (macOS only, see chflags(2))\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGroup id\nInode number\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKind of file (directory, file, pipe, etc)\nTime of last modification\nNumber of hard links\nPermissions\nRdev\nSize in bytes\nUser id\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet a new inode, add the requested entry to the arbo and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nadd the requested entry to the arbo and inform the network\nremove the requested entry to the arbo and inform the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")