name: Release

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual triggers

jobs:
  update_release_draft:
    name: Update release draft
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-linux:
    needs: update_release_draft # wait for the release to exist first
    name: Build for linux
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libfuse3-dev libfuse-dev
      - name: Build project
        run: |
          cargo build --release
  build-windows:
    needs: update_release_draft # wait for the release to exist first
    name: Build for windows
    permissions:
      contents: write
      pull-requests: write
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install system dependencies
        run: |
          curl -L -o winfsp.msi https://github.com/winfsp/winfsp/releases/download/v2.1/winfsp-2.1.25156.msi
          Start-Process msiexec.exe -Wait -ArgumentList '/qn /i winfsp.msi'
      - name: Build project
        run: |
          cargo build --release
      - name: Upload cmd exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/release/wormhole.exe
          asset_name: wormhole.exe
          asset_content_type: application/exe
      - name: Upload service exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/release/wormholed.exe
          asset_name: wormholed.exe
          asset_content_type: application/exe
