name: Release

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual triggers

jobs:
  update_release_draft:
    name: Update release draft
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.store_id.outputs.RELEASE_ID }}
    steps:
      - name: Create Release
        id: create_release
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Store Release Id
        id: store_id
        run: |
          echo "RELEASE_ID=${{ steps.create_release.outputs.id }}" >> $GITHUB_OUTPUT
          echo $GITHUB_OUTPUT
        shell: bash

  build-linux:
    needs: update_release_draft # wait for the release to exist first
    name: Build for linux
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache Cargo registry & git
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libfuse3-dev libfuse-dev
      - name: Generate binaries
        run: |
         cargo build --release
         cargo install cargo-deb
         cargo install cargo-generate-rpm
         cargo deb
         cargo generate-rpm
         mv ./target/debian/wormhole*.deb ./target/debian/wormhole.deb
         mv ./target/generate-rpm/wormhole*.rpm ./target/generate-rpm/wormhole.rpm
      - name: Upload .deb
        uses: svenstaro/upload-release-action@2.11.2
        with:
          release_id: ${{ needs.update_release_draft.outputs.release_id }}
          overwrite: true
          file: ./target/debian/wormhole.deb
          asset_name: wormhole.deb
      - name: Upload .rpm
        uses: svenstaro/upload-release-action@2.11.2
        with:
          release_id: ${{ needs.update_release_draft.outputs.release_id }}
          overwrite: true
          file: ./target/generate-rpm/wormhole.rpm
          asset_name: wormhole.rpm


  build-windows:
    needs: update_release_draft # wait for the release to exist first
    name: Build for windows
    permissions:
      contents: write
      pull-requests: write
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache Cargo registry & git
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Install system dependencies
        run: |
          curl -L -o winfsp.msi https://github.com/winfsp/winfsp/releases/download/v2.1/winfsp-2.1.25156.msi
          Start-Process msiexec.exe -Wait -ArgumentList '/i winfsp.msi /quiet /norestart ADDLOCAL=ALL /L*v install.log'
          gc install.log
      - name: Build project
        env:
          WINFSP_INCLUDE_PATH: "C:\\Program Files\\WinFsp\\inc"
        run: cargo build --release
      - name: Upload cli exe
        uses: svenstaro/upload-release-action@2.11.2
        with:
          release_id: ${{ needs.update_release_draft.outputs.release_id }}
          overwrite: true
          file: ./target/release/wormhole.exe
          asset_name: wormhole.exe
      - name: Upload service exe
        uses: svenstaro/upload-release-action@2.11.2
        with:
          release_id: ${{ needs.update_release_draft.outputs.release_id }}
          overwrite: true
          file: ./target/release/wormholed.exe
          asset_name: wormholed.exe
      - name: Compile .ISS to .EXE Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: .github/installer.iss
          options: /F"WormholeInstaller" /O".\"
      - name: Upload wormhole installer
        uses: svenstaro/upload-release-action@2.11.2
        with:
          release_id: ${{ needs.update_release_draft.outputs.release_id }}
          overwrite: true
          file: .\WormholeInstaller.exe
          asset_name: WormholeInstaller.exe